.TH MAN_3_PRINTF 3 "March 2024" "atlas-printf" "Library Functions Manual"

.SH NAME
_printf \- custom printf function

.SH AUTHOR
Allen Keeling - primary programmer.
Rain Nyte - Debugging and concept.

.SH SYNOPSIS
#include <stdio.h>
#include <stdarg.h>
#include "main.h"

int _printf(const char *format, ...);

.SH DESCRIPTION
_printf is a custom implementation of the printf function. It provides a simplified version of the standard library printf, supporting basic format specifiers.

int _printf(const char *format, ...);

The following format specifiers are supported:
- %c: Print a character.
- %s: Print a string.
- %d or %i: Print an integer.

When using integer-related format specifiers, it's recommended to include the <limits.h> header to ensure proper handling of constants like INT_MIN.

.SH OPTIONS
None

.SH RETURN VALUE
The _printf function returns the number of characters printed (excluding the null byte used to end output to strings). In case of an error, it returns -1.

.SH ERRORS
If an error occurs, _printf returns -1. Check errno for specific error details.

.SH EXAMPLES
#include <stdio.h>
#include "main.h"

int main()
{
    int printed_chars = _printf("Hello, %s! %c\n", "world", 'A');
    printf("Characters printed: %d\n", printed_chars);
    return 0;
}

.SH SEE ALSO
printf(3), stdarg(3)


